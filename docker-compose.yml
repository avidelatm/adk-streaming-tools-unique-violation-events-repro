services:
  db:
    image: postgres:15 # Use a specific version of Postgres
    container_name: adk_repro_db
    environment:
      POSTGRES_DB: adk_repro_db # Database name
      POSTGRES_USER: adk_user # Database user
      POSTGRES_PASSWORD: adk_password # Database password
    ports:
      - "5433:5432" # Map host port 5433 to container port 5432 (to avoid conflict with local DB)
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adk_user -d adk_repro_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: . # Build from the current directory using Dockerfile
    container_name: adk_repro_app
    ports:
      - "8001:8001" # Map host port 8001 to container port 8001
    depends_on:
      db: # Wait for the db service to be healthy
        condition: service_healthy
    env_file:
      - .env # Load environment variables from .env file
    volumes:
      # Mount the agent code for hot-reloading
      - ./minimal_agent:/app/minimal_agent
      - ./api.py:/app/api.py
      # Mount the host's ADC file to a location inside the container
      - type: bind
        source: ${APPDATA:-~/.config}/gcloud
        target: /root/.config/gcloud
        read_only: true  # ensure configuration can't be modified by container
    # If using --reload with uvicorn, keep stdin open
    stdin_open: true
    tty: true

volumes:
  postgres_data: # Define the named volume for data persistence
